         TITLE 'SVCTAB - DISPLAY THE SVC TABLE '
***********************************************************************
*  THIS PROGRAM LOCATES THE SVC TABLE AND PRINTS OUT THE ATTRIBUTES   *
*  OF THE SVCS.                                                       *
***********************************************************************
**  CHANGE LOG:                                                      **
**    2013/01/13 - POINT OUT MISSING SVC ADDRESS BY FLAGGING AS      **
**                 IGCERROR.  PRINT IGCERROR ADDRESS AT HEADING.     **
**                 THIS MAKES IT EASIER TO SPOT MISSING SVC'S. (SG)  **
**                 USE NUCLKUP TO GET EP ADDRESS OF IGCERROR AND     **
**                 COMPARE SVC TABLE ENTRY ADDRESSES WITH IT.        **
**                                                                   **
**                 CHANGED PROGRAM TO USE IBM'S ACTUAL IHASVC MACRO  **
**                 INSTEAD OF INTERNALLY DEFINED IHASVC MACRO.       **
**                                                                   **
***********************************************************************
* ------------------------------------------------------------------- *
         MACRO
.*     --------------------------------------
.*     DISPLAY HEX VALUES IN CHARACTER FORMAT
.*     --------------------------------------
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R7,SAVER7A               Save area for BAL register
         STM   R15,R1,HEXSAVE           Save work registers
         LA    R1,&FROM                 Load from address
         LA    R0,&LEN                  Load number of chars to move
         LA    R15,&TO                  Load to address
         BAL   R7,HEX                   Go to routine - do the work
         LM    R15,R1,HEXSAVE           Restore work registers
         L     R7,SAVER7A               Restore BAL register
         MEND
* ------------------------------------------------------------------- *
SVC      EQU   SVCENTRY
SVCLEN   EQU   8
* ------------------------------------------------------------------- *
SVCTAB   MOWSTART
SVCTAB   AMODE  31
SVCTAB   RMODE  ANY
***********************************************************************
*  THIS PROGRAM LOCATES THE SVC TABLE AND PRINTS OUT THE ATTRIBUTES   *
*  OF THE SVCS.                                                       *
***********************************************************************
         LR    R10,R1             SAVE OFF REGISTER 1
*                                 LOOK UP ENTRY POINT OF IGCERROR
         NUCLKUP BYNAME,NAME='IGCERROR',ADDR=(1)
         ST    R1,ERRORENT        SAVE ENTRY POINT OF IGCERROR
         MVI   LINE,X'40'         INITIALIZE BLANKING
         MVC   LINE+1(L'LINE-1),LINE         BLANK LINE TO OUTPUT
         MVI   LINE+1,C'>'
         MVC   LINE+3(19),=C'IGCERROR ADDRESS:  '  PUT IN TITLE
         HEX   LINE+22,4,ERRORENT                  PUT IN ERROR ADDR
*        TPUT  LINE,75
         USING CVT,R11            CVT
         L     R11,16             CVT ADDR
         L     R11,CVTABEND       -> TO SECONDARY CVT
         DROP  R11
         USING SCVTSECT,R11       SECONDARY CVT
         L     R11,SCVTSVCT       -> TO SVC TABLE (256 ENTRIES)
         DROP  R11
         USING SVC,R11            SVC TABLE
         USING CPPL,R10
         USING IOPL,R9
         LA    R9,IOPLADS
         L     R3,CPPLUPT
         L     R4,CPPLECT
         SR    R10,R10            LOOP COUNTER FOR 256 SVCS
         LA    R8,SVCOP           -> TO SVC NAME TABLE
*        TPUT  HEAD,L'HEAD
*                                 OUTPUT HEADERS
         PUTLINE PARM=PARM,UPT=(R3),ECT=(R4),ECB=ECB1,                 *
               OUTPUT=(MSG1,TERM,SINGLE,DATA),                         *
               MF=(E,IOPLADS)
         PUTLINE PARM=PARM,UPT=(R3),ECT=(R4),ECB=ECB0,                 *
               OUTPUT=(MSG0,TERM,SINGLE,DATA),                         *
               MF=(E,IOPLADS)
NEXTENT  EQU   *                  FORMAT SVC TABLE DATA
         MVI   HEAD,X'40'         A BLANK
         MVC   HEAD+1(79),HEAD    AND 79 MORE
         CVD   R10,DOUBLE         MAKE SVC # DECIMAL
         MVC   HEAD(4),=X'40202120' MOVE SVC # INTO MESSAGE
         ED    HEAD(4),DOUBLE+6   EDIT NUMBER INTO IT
         ST    R10,FULL           SAVE SVC NUMBER
         UNPK  OUT(9),FULL(5)     UNPACK
         MVZ   OUT(8),OUT-1       FOOL WITH ZONES
         TR    OUT(8),=C'0123456789ABCDEF'  CONVERT TO CHARACTERS
         MVC   HEAD+6(4),=C'(  )' SPACE FOR SVC # IN HEX
         MVC   HEAD+7(2),OUT+6    MOVE IN HEX SVC NUMBER
         CLC   SVCEP(4),ERRORENT  IS SVC ADDR IGCERROR ?
         BNE   IGCNOERR                  NOT, THEN JUST PUT ADDR IN
         MVC   HEAD+12(8),=C'IGCERROR'   YES, MARK AS IGCERROR
         MVC   HEAD+22(10),=C'''RESERVED'''   PURPOSE IS RESERVED
         B     IGCEGOON                       DON'T PUT ENTRY POINT
IGCNOERR DS    0H
         HEX   HEAD+12,4,SVCEP    FORMAT SVC ENTRY POINT ADDRESS
IGCEGOON DS    0H
         MVI   HEAD+40,C'6'       IT MUST BE A TYPE 6
         TM    SVCTP,SVCTP6       IS IT A TYPE 6?
         BO    GETATTR            YES, GO GET ATTRIBUTES
         MVC   HEAD+39(3),=C'3/4' ASSUME TYPE 3 OR 4
         TM    SVCTP,SVCTP34      IS IT A TYPE 3 OR 4?
         BO    GETATTR            YES, GO GET ATTRIBUTES
         MVC   HEAD+39(3),=C' 2 ' ASSUME ITS A TYPE 2
         TM    SVCTP,SVCTP2       IS IT A TYPE 2?
         BO    GETATTR            YES, GO GET ATTRIBUTES
         MVI   HEAD+40,C'1'       ASSUME ITS A TYPE 1
GETATTR  EQU   *
         MVI   HEAD+44,X'40'      ASSUME NOT AUTHORIZED
         TM    SVCTP,SVCAPF       TEST FOR AUTHORIZED
         BZ    GETAMODE           AND FOUND IT ISN'T
         MVI   HEAD+44,C'Y'       SET IT TO AUTHORIZED
GETAMODE EQU   *
         TM    SVCEP,SVCAMODE     TEST FOR AMODE BIT SET
         BZ    GETAMOD0           NOT SET
         MVC   HEAD+48(2),=C'31'  INDICATE AMODE IS 31
         B     GETATTR1           GO ON
GETAMOD0 DS    0H
         MVC   HEAD+48(2),=C'24'  INDICATE AMODE IS 24
GETATTR1 EQU   *
         MVI   HEAD+52,X'40'      ASSUME SVC NOT PART OF THE ESR
         TM    SVCTP,SVCESR       TEST FOR PART OF ESR
         BZ    GETATTR2           AND FOUND IT ISN'T
         MVI   HEAD+52,C'Y'       SAY ITS PART OF ESR
GETATTR2 EQU   *
         MVI   HEAD+56,X'40'      ASSUME ITS NON-PREMPTIVE
         TM    SVCTP,SVCNP        AND TEST TO SEE
         BZ    GETATTR3           AND FOUND IT ISN'T
         MVI   HEAD+56,C'Y'       SAY IT IS
GETATTR3 EQU   *
         MVI   HEAD+60,X'40'      ASSUME IT CAN'T BE ASSISTED
         TM    SVCTP,SVCASF       AND TEST TO SEE
         BZ    LOCK0              AND FOUND IT ISN'T
         MVI   HEAD+60,C'Y'       SAY IT IS
LOCK0    EQU   *
         LA    R2,HEAD+63         -> TO LOCK FIELD IN MSG TEXT
         TM    SVCLOCKS,SVCLL     LOCAL LOCK?
         BZ    LOCK1              NOT LOCAL LOCK
         MVC   0(6,R2),=C'LOCAL,' MOVE IN LOCAL
         LA    R2,6(,R2)          BUMP POINTER
LOCK1    EQU   *
         TM    SVCLOCKS,SVCCMS    CMS LOCK?
         BZ    LOCK2              NOT CMS LOCK
         MVC   0(4,R2),=C'CMS,'   MOVE IN CMS
         LA    R2,4(,R2)          BUMP POINTER
LOCK2    EQU   *
         TM    SVCLOCKS,SVCOPT    OPT LOCK?
         BZ    LOCK3              NOT OPT LOCK
         MVC   0(4,R2),=C'OPT,'   MOVE IN OPT
         LA    R2,4(,R2)          BUMP POINTER
LOCK3    EQU   *
         TM    SVCLOCKS,SVCALLOC  ALLOC LOCK?
         BZ    LOCK4              NOT ALLOC LOCK
         MVC   0(6,R2),=C'ALLOC,' MOVE IN ALLOC
         LA    R2,6(,R2)          BUMP POINTER
LOCK4    EQU   *
         TM    SVCLOCKS,SVCDISP   DISP LOCK?
         BZ    DONELOCK           NOT DISP LOCK
         MVC   0(5,R2),=C'DISP,'  MOVE IN DISP
         LA    R2,5(,R2)          BUMP POINTER
DONELOCK EQU   *
         BCTR  R2,0               BACK POINTER UP ONE BYTE AND
         MVI   0(R2),C' '         BLANK TRAILING COMMA
         CLM   R10,B'0001',0(R8)  IS THIS ENTRY IN TABLE?
         BNE   PUTMSG             NO, SO JUST PUT MESSAGE W/OUT NAME
*
         CLC   SVCEP(4),ERRORENT  IS SVC ENTRY POINT = IGCERROR E.P.?
         BNE   IGCNOER1           NO. JUST DO REGULAR PROCESSING
         MVC   HEAD+22(10),=C'''RESERVED'''   YES. MARK AS RESERVED.
         MVC   HEAD+32(4),=C'    '            BLANK REST OF FIELD
         B     IGCEGOO1                       DON'T PUT NAME FROM TABLE
IGCNOER1 DS    0H
         MVC   HEAD+22(14),1(R8)  MOVE SVC NAME INTO MESSAGE
IGCEGOO1 DS    0H
*
         LA    R8,SVCNAML(,R8)    BUMP -> TO NEXT SVC NAME ENTRY
PUTMSG   EQU   *
         PUTLINE PARM=PARM,UPT=(R3),ECT=(R4),ECB=ECB1,                 *
               OUTPUT=(MSG1,TERM,SINGLE,DATA),                         *
               MF=(E,IOPLADS)
*        TPUT  HEAD,L'HEAD
         LA    R11,SVCLEN(,R11)   -> TO NEXT SVC TABLE ENTRY
         LA    R10,1(,R10)        ADD 1 TO COUNT OF SVCS
         CH    R10,=H'256'        AT END YET?
         BL    NEXTENT            NO, MORE SVCS TO TELL ABOUT YET
GOTOEND  DS    0H                 BRANCH POINT
         MOREND
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)         Move byte
         UNPK  0(3,R15),1(2,R15)      Unpack
         TR    0(2,R15),HEXTAB-240    Translate
         LA    R15,2(,R15)            Increment output pointer
         LA    R1,1(,R1)              Increment input pointer
         BCT   R0,HEX                 Decrement length, then loop
         MVI   0(R15),C' '            Blank the trailing byte
         BR    R7                     Return to caller
HEXTAB   DC    C'0123456789ABCDEF'    Translate table
HEXSAVE  DS    3F                     Save registers
SAVER7A  DS    F                      Save BAL register
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
PARM     PUTLINE MF=L
ECB0     DC    F'0'
ECB1     DC    F'0'
IOPLADS  DC    4F'0'
FULL     DC    F'0'
ERRORENT DC    F'0'               ENTRY POINT OF IGCERROR
DOUBLE   DC    D'0'
         DC    F'0'               MUST PRECEED OUT
OUT      DS    2F                 WORK AREA FOR UNPK
         DS    CL1                PAD SPACE FOR UNPK
MSG0     DC    H'64'              PUTLINE OF IGCERROR ADDRESS
         DC    H'0'
LINE     DC    CL60' '
MSG1     DC    H'84'
         DC    H'0'
HEAD     DC    CL80'    SVC       ADDR    ---- NAME ----  TYPE AUT AMD *
               ESR PRE ASS LOCKS'
*                   0123456789 123456789 123456789 123456789 123456789
*                     123  (XX)  AAAAAAAA  SVC_NAME         3   Y   31
*              123456789 123456789
*               N   Y   Y     ....
*
* THE SVCTABLE WAS "BORROWED" DIRECTLY FROM THE DISASSEMBLER.
*
         COPY  DISASM3B
         PRINT NOGEN
         CVT   DSECT=YES,PREFIX=NO
         IKJCPPL
         IKJPTPB
         IKJIOPL
         IHASCVT
         PRINT  ON,GEN
         IHASVC LIST=YES
         END
