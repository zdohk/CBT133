CPCMD    MOWSTART SP=250
*********************************************************************
*                                                                   *
* PROGRAM TO RUN ON MVS TO ISSUE VM/CP COMMAND.                     *
* MAY BE RUN AS A TSO COMMAND, EXECUTED AS A PROGRAM, OR RUN AS A   *
* STARTED TASK.                                                     *
* LINK WITH AC(1). NAME IS CPCMD WITH ALIAS CP.                     *
*                                                                   *
* E.G. (1) // EXEC PGM=CPCMD,PARM='Q CPUID'                         *
*      (2) CP Q CPUID                                               *
*      (3) // EXEC PGM=CPCMD                                        *
*          //SYSIN DD *                                             *
*          Q CPUID                                                  *
*          ATT 76A MVSXA 76A                                        *
*          /*                                                       *
*                                                                   *
* IF IN BATCH, AND A SYSIN DD IS PRESENT, THE PARM IS IGNORED AND   *
* THE COMMANDS ARE READ FROM THE SYSIN FILE.                        *
*                                                                   *
*********************************************************************
MOWWORK  DSECT
TIOT     DC    F'0'           EXTRACT WORK AREA, KEEP    (1)
TSO      DC    F'0'            THESE 3 TOGETHER AND      (2)
ASID     DC    F'0'             IN THIS ORDER.           (3)
*
ACMD     DC    A(0)           THESE FOUR FULL WORDS      (1)
ABUF     DC    A(0)            MUST REMAIN               (2)
CMDL     DC    F'0'             IN THE SAME RELATIVE     (3)
RESPBUFL DC    F'0'              POSITIONS.              (4)
CMDFLG   DC    X'00'          INDIC. COMMAND, PROGRAM OR STARTED TASK
SYSINFLG EQU   X'80'
STCFLG   EQU   X'04'
BATFLG   EQU   X'02'
TSOFLG   EQU   X'01'
         DS    XL7            UNUSED
         SPACE 2
CPCMD    CSECT
         USING CVT,R10
         USING ASVT,R9
         USING ASCB,R8
         LR    R11,R1                   COPY A(PARM)
         L     R10,16                   A(CVT)
         L     R9,CVTASVT               A(ASVT)
         LA    R9,ASVTFRST              -> FIRST ASVT ENTRY
         LA    R7,TIOT                  POINT TO RETURN AREA
         EXTRACT (7),FIELDS=(TSO,ASID,TIOT)  EXTR TO GET STUFF
         MVI   CMDFLG,TSOFLG            INITIALIZE CMD FLAG
         L     R7,TSO                   -> TO TSO INDICATOR
         TM    0(R7),X'80'              ARE WE ON TSO?
         BO    GOTTYPE                  IT WAS
         MVI   CMDFLG,BATFLG            NOW A 1, TEST FOR JOB
         L     R8,ASID                  GET ASID INTO A REG
         SLL   R8,2                     MULTIPLY BY 4
         L     R8,0(R8,R9)              NOW HAS A(OUR ASCB)
         CLC   ASCBJBNI,=F'0'           TEST FOR JOB
         BNE   GOTTYPE                  NOT ZERO, SO ITS A JOB
         MVI   CMDFLG,STCFLG            NOW ITS A 2, STC
GOTTYPE  EQU   *
         TM    CMDFLG,TSOFLG            IN TSO MODE?
         BO    GETPARM                  YES, SO GETPARM
         LA    R3,=CL8'SYSIN'           DDNAME TO LOOK FOR
         BAL   R10,TIOTSCAN             GO SEE IF THERE IS ONE
         BNE   GETPARM                  WASN'T A SYSIN
         OI    CMDFLG,SYSINFLG          SET SYSIN FLAG ON
         OPEN  (SYSIN,(INPUT))          OPEN IT
         B     COMP4                    AND GO GET WORK AREA
*********************************************************************
* DETERMINED WHO WE ARE, PROCESS ACCORDINGLY                        *
*********************************************************************
GETPARM  EQU   *
         LR    R1,R11         RESTORE A(PARM)
         ICM   R2,B'1111',0(R1)  POINT TO PARAMETER
         LH    R1,0(R2)       PICK UP LENGTH
         BL    COMP4          ONLY ONE PARM
         SH    R1,=H'4'       CALL FROM TMP
         SH    R1,2(R2)
         LA    R2,2(,R2)      PREFIX IS 4 BYTES
         AH    R2,0(R2)       SKIP OVER COMMAND NAME
         STH   R1,0(R2)       PUT LENGTH OF CP CMD IN CORRECT PLACE
COMP4    EQU   *
         LH    R5,BUFLEN              LENGTH OF BUFFER AREA
         GETMAIN RU,LV=(R5),SP=250,BNDRY=PAGE  FOR FOR RETURNED DATA
         ST    R1,ABUF                A(RESPBUF) - SAVE IT
         TM    CMDFLG,SYSINFLG+BATFLG READING FROM SYSIN?
         BO    CMDOK                  YES
         LH    R3,0(R2)               GET LENGTH OF COMMAND
         LTR   R3,R3                  IS THERE ANY LENGTH?
         BP    CMDOK                  GO TRY TO DO IT
NOCMDTXT EQU   *
         MVC   0(26,R1),=C'NO CP COMMAND TEXT ENTERED'
         MVI   26(R1),X'15'           NEW LINE CHAR
         MVC   RESPBUFL,=F'27'        LENGTH OF MESSAGE
         B     RESULT         PRETEND WE DID IT, BUT TELL ERROR MSG
CMDOK    EQU   *
         TM    CMDFLG,SYSINFLG+BATFLG PROCESSING A SYSIN FILE?
         BNO   CMDOK1                 NO, USE VALUE IN PARM
         GET   SYSIN                  GET A RECORD FROM SYSIN
         LA    R3,71(,R1)             POINT TO END OF RECORD
SCAN1    EQU   *
         CLI   0(R3),C' '             A BLANK
         BNE   SCAN2                  NO
         BCTR  R3,0                   BACK UP A CHAR
         B     SCAN1                  AND CHECK IT
SCAN2    EQU   *
         SR    R3,R1                  NOW R3 HAS LENGTH OF COMMAND
         LA    R3,1(R3)               ADD 1 BACK TO GET REAL LENGTH
         LR    R2,R1                  COPY POINTER TO COMMAND TEXT
         SH    R2,=H'2'               DO THIS SO MOVCMD INSTR WILL WORK
CMDOK1   EQU   *
         L     R1,ABUF                RESTORE REG 1
         ST    R3,CMDL                SAVE LENGTH
         LH    R5,BUFLEN              RELOAD LENGTH
         LA    R1,0(R1,R5)            GET EOBUFF.....
         SR    R1,R3                  ....MINUS CMD LENGTH AND .....
         N     R1,=F'-8'              .....ROUND BACK TO DOUBLEWORD.
         ST    R1,ACMD                SAVE COMMAND ADDRESS
         BCTR  R3,0                   AND
         EX    R3,MOVCMD              MOVE IT TO IT'S NEW HOME
         LR    R2,R1
         S     R1,ABUF                SUBT START OF RESP. AREA
         ST    R1,RESPBUFL            TO GET LENGTH
         LA    R3,1(,R3)              GET ORIGINAL CMD LENGTH
         LR    R0,R3                  AND COPY ITS VALUE
         BCTR  R2,0
MAKEUP   EQU   *
         LA    R1,0(R2,R3)            ENSURE
         OI    0(R1),X'40'               UPPER
         BCT   R3,MAKEUP                     CASE
         SPACE 3
*********************************************************************
* THE FOLLOWING TESTS FOR COMMANDS WE AREN'T ALLOWED TO ISSUE       *
*********************************************************************
NONBLNK  EQU   *
         CLI   0(R1),X'40'              IS THIS A BLANK?
         BNE   CMDSTRT                  NO, GO TO CHECK COMMAND
         LA    R1,1(R1)                 POINT TO NEXT CHAR
         BCT   R0,NONBLNK               AND CHECK IT
         L     R1,ABUF
         B     NOCMDTXT
CMDSTRT  EQU   *
         CLC   =C'CP ',0(R1)            ADJUC
         BNE   NOCPREFX
         LA    R1,3(,R1)                POINT TO START OF COMMAND
         SH    R0,=H'3'                 ADJUST LENGTH
         B     NONBLNK
NOCPREFX EQU   *
         CH    R0,=H'3'                 LENGTH OF COMMAND
         BL    ALLOWED
         CLC   =C'LOG',0(R1)            LOGOFF
         BE    NOTALOWD
         CLC   =C'I ',0(R1)             IPL
         BE    NOTALOWD
         CLC   =C'IPL',0(R1)            IPL
         BE    NOTALOWD
         CH    R0,=H'4'                 LENGTH OF COMMAND
         BL    ALLOWED
         CLC   =C'DISC',0(R1)           DISCONNECT
         BE    NOTALOWD
         CH    R0,=H'8'                 LENGTH OF COMMAND
         BL    ALLOWED
         CLC   =C'SHUTDOWN',0(R1)       SHUTDOWN
         BE    NOTALOWD
ALLOWED  EQU   *
         MODESET KEY=ZERO,MODE=SUP
         L     R5,ABUF           A(BUF)
         LH    R11,BUFLEN        LENGTH OF TOTAL AREA
         BCTR  R11,0             SUBTRACT ONE
         LA    R7,0(R5,R11)      COMPUTE END ADDRESS OF AREA
         PGSER R,FIX,A=(R5),EA=(R7),ECB=0  FIX PAGES IN STORAGE
         L     R8,ACMD           A(CMD)
         LRA   R8,0(R8)          POINT TO REAL ADDRESS OF CMD
         LRA   R9,0(R5)          POINT TO REAL ADDRESS OF BUF
         L     R10,CMDL          LENGTH OF COMMAND TO EXECUTE
         L     R11,RESPBUFL      LENGTH OF RETURN AREA
         O     R10,=X'40000000'  INDICATE RETURN RESPONSE IN BUFFER
         DC    X'838A0008'       DIAGNOSE INSTR - NO OPCODE
         BNZ   *+8               LEAVE LEN ALONE IF NOT ALL FIT
         ST    R11,RESPBUFL      LENGTH OF RESP
         PGSER R,FREE,A=(R5),EA=(R7)  NOW FREE UP PAGES AGAIN
         MODESET KEY=NZERO,MODE=PROB
         SPACE
RESULT   L     R2,RESPBUFL    LOAD IN LENGTH OF RETURNED TEXT
         LTR   R2,R2          SET COND CODE
         BNP   FIN            NO RESPONSE TO COMMAND
         SPACE
*********************************************************************
* PROCESS RESPONSE FOR CALLER                                       *
*********************************************************************
         L     R3,ABUF        POINT TO START OF RETURNED TEXT
         TM    CMDFLG,BATFLG  IS THIS BATCH EXECUTION?
         BNO   DOPUTS         NO, ITS A COMMAND OR STC
         OPEN  (SYSPRINT,(OUTPUT)) ONLY FOR JOB/BATCH EXECUTION
         TM    SYSPRINT+48,X'10'   DID IT OPEN?
         BNO   FIN            NO, SOME PROBLEM SO JUST END
         SPACE
DOPUTS   EQU   *
         LR    R1,R3          COPY POINTER TO START OF LINE
SCAN     CLI   0(R3),X'15'    NEW LINE CHAR
         BE    GETLEN         YES, SO CALCULATE LEN FOR TPUT
         LA    R3,1(R3)       POINT TO NEXT CHAR
         BCT   R2,SCAN        AND CHECK IT WHILE THERE ARE SOME
         TM    CMDFLG,SYSINFLG+BATFLG   PROCESSING A SYSIN STREAM?
         BO    CMDOK          YES, GET MORE TO DO
         B     FIN            NO MORE BUFFER
GETLEN   EQU   *
         LR    R0,R3          CALCULATE LENGTH OF TEXT TO PUT
         SR    R0,R1          LENGTH TO BE PUT
         STH   R0,SYSPRINT+82 SAVE THE LENGTH
         LR    R5,R0          COPY LENGTH OF TEXT
         LR    R7,R1          COPY POINTER TO DATA
         TPUT  (1),(0),R      ISSUE TPUT (NO-OP IN BATCH)
         TM    CMDFLG,TSOFLG  IS IT TSO?
         BO    NXTLINE        YES, SO DON'T DO PUT TO SYSPRINT
         TM    CMDFLG,BATFLG  IS IT BATCH?
         BO    BATCHPUT       YES, SO DO PUT TO SYSPRINT
         MVI   WTOMSG+4,X'40' MOVE IN A BLANK TO BYTE 1 OF MESSAGE
         MVC   WTOMSG+5(79),WTOMSG+4 AND BLANK ENTIRE FIELD
         BCTR  R5,0           SUBTRACT 1 FOR EXECUTED MOVE
         EX    R5,WTOTEXT     MOVE TEXT TO WTO MESSAGE AREA
         WTO   MF=(E,WTOMSG)  AND DO WTO BECAUSE WE MUST BE STC
         B     NXTLINE        GO TO NEXT LINE
BATCHPUT EQU   *
         PUT   SYSPRINT,(7)   WRITE OUTPUT TO SYSPRINT
NXTLINE  LA    R3,1(R3)       -> TO CHAR FOLLOWING X'15' FOR NEXT PUT
         BCT   R2,DOPUTS      SUBTRACT ONE FOR CHARS LEFT TO DO
         TM    CMDFLG,SYSINFLG+BATFLG   PROCESSING A SYSIN STREAM?
         BO    CMDOK          YES, GET MORE TO DO
         B     FIN            NO MORE BUFFER
NOTALOWD EQU   *
         LA    R8,30                    LENGTH OF RESPONSE + 1
         ST    R8,RESPBUFL              SAVE LENGTH
         L     R15,ABUF                 A(BUFFER)
         MVC   0(29,R15),=CL29'COMMAND NOT ALLOWED:          '
         MVC   21(8,R15),0(R1)          MOVE IN COMMAND NAME
         MVI   29(R15),X'15'            LF
         B     RESULT                   RETURN
         SPACE 2
FIN      EQU   *
         CLOSE (SYSPRINT,,SYSIN)        EVEN IF IT WASN'T OPEN
         L     R1,ABUF                  ADDRESS OF WORK AREA TO FREE
         LH    R5,BUFLEN                AND LENGTH
         FREEMAIN R,LV=(5),A=(1),SP=250 FREE GOTTEN STORAGE
         MOREND SP=250
         EJECT
***********************************************************************
*  CODE FOR TIOTSCAN SUB                                              *
***********************************************************************
TIOTSCAN EQU   *
         L     R2,TIOT          LOAD ADDRESS
         LA    R2,24(R2)        AND AGAIN
         XR    R4,R4            CLEAR A REGISTER
TIOTSC1  IC    R4,0(R2)         PUT A BYTE IN A REGISTER
         LTR   R4,R4            SEE IF IT WAS ZERO
         BZ    NOTIN
         TM    3(R2),B'00010000'   IS IT DD DYNAM?
         BO    *+10             YES, SO SKIP AROUND THIS
         CLC   0(8,R3),4(R2)    IS THIS SAME NAME AS WE ARE SEEKING
         BCR   8,R10            YES IT IS, SO JUST RETURN
         AR    R2,R4            POINT TO NEXT ENTRY
         B     TIOTSC1          GO BACK AND LOOK AT IT
NOTIN    CLI   *,0              SET CONDITION CODE NOT EQUAL
         BR    R10              RETURN WITH NON ZERO CONDITION CODE
         EJECT
         DS    0H
BUFLEN   DC    H'4096'          SIZE OF RESPONSE/COMMAND BUFFER
*                               MAY BE SMALLER, BUT DON'T MAKE BIGGER.
MOVCMD   MVC   0(*-*,R1),2(R2)
WTOTEXT  MVC   WTOMSG+4(*-*),0(R7)      EXECUTED MOVE INSTR
WTOMSG   WTO   '0123456789 123456789 123456789 123456789 123456789 1234*
               56789 123456789 123456789',                             *
               ROUTCDE=(2),MF=L
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GL),LRECL=80,RECFM=FB,     *
               EODAD=FIN
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),LRECL=80,RECFM=U
         IHAASVT
         IHAASCB
         CVT   DSECT=YES
         END
