         TITLE '*** LASTCLPA ***'
* ------------------------------------------------------------------- *
*   IMPORTANT NOTE.   (FIXED BY SAM GOLOB - NOV 13, 2016.)            *
*                                                                     *
*   THERE IS A Z/OS RELEASE DEPENDENCY IN THIS CODE.  WE CHANGED THE  *
*    TEST FOR RELEASE NUMBER BECAUSE OF THE FOLLOWING REASON.....     *
*                                                                     *
*   BEFORE Z/OS 1.2, THE FIRST RECORD OF THE PLPA HAD THE CORRECT     *
*    LASTCLPA TIME.  AFTER THAT, THE SECOND RECORD CONTAINS THE       *
*    CORRECT TIME, SO YOU HAVE TO DO AN EXTRA "GET", DEPENDING ON     *
*    THE RELEASE NUMBER.  BUT YOU CAN'T DO A STRAIGHT CLC ON '7705',  *
*    BECAUSE Z/OS 2.2 IS '77A0' AND THAT IS "LESS" THAN '7705', SO    *
*    THE COMPARE FAILS WITH Z/OS 2.2, YOU DON'T DO THE EXTRA "GET",   *
*    AND THE CLPA TIME DISPLAYED BY THE PROGRAM IS WRONG.             *
*                                                                     *
*   SOLVED THE PROBLEM BY USING CVTOSLV3, BIT X'10', TO DETERMINE     *
*    Z/OS 1.2 OR HIGHER.  DON'T USE HBBnnnn ANY MORE, 32 BYTES        *
*    BEFORE THE CVT STARTS, AND COMPARE ON THE VALUE OF 'nnnn'.       *
* ------------------------------------------------------------------- *
* -    THIS VERSION OF LASTCLPA USES PUTLINE TERMINAL OUTPUT    ----- *
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R4,SAV4HEX
         STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R4,HEX
         L     R4,SAV4HEX
         LM    R15,R1,HEXSAVE
         MEND
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *
LASTCLPA MOWSTART
LASTCLPA AMODE  31
LASTCLPA RMODE  24
***********************************************************************
* THIS PROGRAM IS USED TO DETERMINE THE DATE AND TIME OF THE MOST     *
* RECENT CLPA. IT CAN BE USED TO VERIFY IF THE OPERATOR REALLY DID    *
* DO A CLPA IN RESPONSE TO IEA101A AT IPL TIME.                       *
* UNDER ESA GOES IN SYS2.LINKLIB, SETCODE AC(1).                      *
***********************************************************************
         MVI   BIGLINE-1,X'40'
         MVC   BIGLINE(L'BIGLINE),BIGLINE-1
         USING CVTMAP,R11
         L     R11,16                   A(CVT)
         ICM   R1,15,0(R1)              POINT TO PARAMETER
         LH    R2,0(R1)                 PICK UP LENGTH
         BL    COMP4                    ONLY ONE PARM
         SH    R2,=H'4'                 SUBTRACT 2 1/2 WDS OF LENGTH
         SH    R2,2(R1)                 SUBTRACT LENGTH OF COMMAND NAME
         BZ    NOPARM                   NO LENGTH LEFT, NO PARM
         AH    R1,2(R1)                 SKIP OVER COMMAND NAME
         LA    R1,4(,R1)                AND 4 BYTES OF LENGTH
COMP4    EQU   *
         LTR   R2,R2                    TEST FOR NOT ZERO
         BNZ   PARM                     PARM SUPPLIED
NOPARM   EQU   *
*        SETMODE 31                     31-BIT ADDRESSING ON
         L     R2,CVTASMVT              A(ASMVT)
         L     R5,8(R2)                 A(PAGING ART)
         L     R3,24(R5)                A(DSN LIST)
         MVC   PAGEDSN(44),0(R3)      PLPA NAME (ALWAYS FIRST IN LIST)
*        SETMODE 24                     BACK TO 24-BIT ADDRESSES
         B     OPEN
PARM     EQU   *
         BCTR  R2,0                     LESS ONE FOR EXECUTE
         EX    R2,MVCDSN1               MOVE NAME TO OUR DATA AREA
OPEN     EQU   *
         USING SHWOUT,R10
         USING SHWASSOC,R9
***********************************************************************
*  USE SHOWCAT FOR STARTERS TO GET CATALOG ACB AND CI FOR DSET        *
***********************************************************************
         LA    R10,AREA                      -> TO RETURN DATA AREA
         SHOWCAT AREA=AREA,NAME=PAGEDSN      ISSUE MACRO TO GET INFO
         BAL   R14,SETPTR                    SET -> TO ASSOC
         MVC   CI(3),SHWACI                  CI OF THE ASSOCIATED ENTRY
         L     R2,SHWACBP                    GET CATALOG ACB POINTER
         ST    R2,ACBA                       AND SAVE IT
         TM    48(R2),X'10'                  IS ACB OPEN?
         BO    SETPL                         YES, SO OK TO GO ON
         APUT  =C'CATALOG NOT OPEN',16       TELL CALLER
         B     RETURN                        AND EXIT
         SPACE
***********************************************************************
* SET UP CATALOG FIELD PARAMETER LIST                                 *
***********************************************************************
SETPL    EQU   *
         USING CTGFL,R9
         LA    R9,FLD1
         MVI   CTGFLDNO,X'01'                1 ENTRY
         LA    R2,FLDNM1                     A(FIELDNAME)
         MVC   0(08,R2),=C'ENTNAME '         MOVE IN FIELD NAME
         ST    R2,CTGFLDNM                   SAVE IT
         XC    CTGFLCHN(4),CTGFLCHN          ZERO IT OUT
         SPACE
         LA    R9,FLD2
         MVI   CTGFLDNO,X'01'                1 ENTRY
         LA    R2,FLDNM2                     A(FIELDNAME)
         MVC   0(08,R2),=C'DEVTYP  '         MOVE IN FIELD NAME
         ST    R2,CTGFLDNM                   SAVE IT
         XC    CTGFLCHN(4),CTGFLCHN          ZERO IT OUT
         SPACE
         LA    R9,FLD3
         MVI   CTGFLDNO,X'01'                1 ENTRY
         LA    R2,FLDNM3                     A(FIELDNAME)
         MVC   0(08,R2),=C'VOLSER  '         MOVE IN FIELD NAME
         ST    R2,CTGFLDNM                   SAVE IT
         XC    CTGFLCHN(4),CTGFLCHN          ZERO IT OUT
         DROP  R9
         SPACE
***********************************************************************
* SET UP CATALOG PARAMETER LIST                                       *
***********************************************************************
         USING CTGPL,R1
         LA    R1,CATPL            -> CATALOG PARAMETER LIST
         OI    CTGOPTN1,CTGBYPSS
         NI    CTGOPTN1,255-(CTGNAME+CTGCNAME)   CI AND ACB PROVIDED
         XC    CTGOPTN2(1),CTGOPTN2              CLEAR
         OI    CTGOPTN3,CTGLOC+CTGNUM+CTGAM0
         LA    R2,CI               ADDRESS OF CONTROL INTERVAL
         ST    R2,CTGENT           SAVE IT
         LA    R2,ACBA             A(CATALOG ACB)
         ST    R2,CTGCAT           SAVE IT IN PARM LIST
         LA    R2,AREA             -> WORK AREA
         ST    R2,CTGWKA           SAVE IT IN PARM LIST
         MVI   CTGTYPE,C'D'        INDICATE 'DATA' REQD
         MVI   CTGNOFLD,X'03'      NUMBER OF FPLS
         LA    R2,FLD1             POINT TO CTGFIELD
         ST    R2,CTGFIELD         SAVE IT IN PARM LIST
         LA    R2,FLD2             POINT TO CTGFIELD
         ST    R2,CTGFL2           SAVE IT IN PARM LIST
         LA    R2,FLD3             POINT TO CTGFIELD
         ST    R2,CTGFL3           SAVE IT IN PARM LIST
         SPACE
         SVC   26                  ISSUE CATALOG SVC
         LTR   R15,R15             HOW DID WE DO?
         EJECT
         MVC   S99TUKY2+6(44),AREA+4    MOVE PAGEDSN INTO ALLOC LIST
         MVC   S99TUKY4+6(6),AREA+4+44+4  MOVE VOLSER INTO ALLOC LIST
         LA    R4,DTYP            -> TO DEVICE TYPE TABLE
         LA    R1,AREA+4+44       -> TO DEVICE TYPE
TYPLP    EQU   *
         CLC   0(4,R1),0(R4)      FIND MATCHING TYPE IN TABLE
         BE    GOTTYP             GOT IT
         LA    R4,8(R4)           -> NEXT ENTRY IN TABLE
         B     TYPLP              GO AND TEST IT
GOTTYP   EQU   *
         MVC   S99TUKY5+6(4),4(R4)  INDICATE UNIT(XXXX)
         MVI   S99VERB,X'01'      INDICATE ALLOC DSNAME(XXXXXXXX)
         LA    R1,S99RBPTR        ADDR OF PARM LIST FOR DYNALLOC.
         DYNALLOC ,               ALLOCATE DATASET
         LTR   R15,R15            CHECK RETURN CODE, ASSUME OK
         OPEN  PLPA               -> OPEN PLPA PAGE DATASET
         GET   PLPA               GET THE FIRST RECORD
         LR    R9,R11             COPY CVT ADDR
* --------------------------------------------------------------- *
*            USE CVTOSLV3 TO DETERMINE THE SYSTEM LEVEL.          *
*            IT MUST BE Z/OS 1.2 OR HBB7705 OR HIGHER.            *
* --------------------------------------------------------------- *
*                                 X'4F3' OFF THE CVT IS CVTOSLV3.
         TM    X'4F3'(R9),X'10'   IS THIS HBB7705 OR MORE?
         BNO   GOTTIM             NO. USE THE FIRST RECORD.
* ---->      TEST     -----  ABOVE
*                                 YES, HBB7705 OR HIGHER, SO..
         GET   PLPA               GET THE SECOND RECORD
*                                 AND USE THE TIMESTAMP FROM IT.
GOTTIM   EQU   *
* ---->      TEST     -----  BELOW  -----   *********
*        STM   R14,R1,SAVE1401          DO A TEST DISPLAY
*        MVC   BIGLINE,BIGLINE-1        TO HEX DISPLAY
*        HEX   BIGLINE,8,32(R1)          THE RAW TIME STAMP.
*        MVC   BIGLINE+22(14),=C'Raw Time Stamp'
*        APUT  BIGLINE,50               TO SEE IF IT CHANGES
*        LM    R14,R1,SAVE1401           WITHIN THE CURRENT IPL.
*                                       (IT SHOULD NOT.)
* ---->      TEST     -----  ABOVE  -----   *********
         MVC   TSTAMP(8),32(R1)   MOVE DATA TO OUR DATA AREA
         CLOSE PLPA               CLOSE DATASET
         MVI   S99VERB,X'02'      INDICATE FREE DDNAME(XXXXXXXX)
         LA    R1,S99TUPLF        -> TO FREE TEXT UNITS
         ST    R1,S99TXTPP        AND SAVE IN PARM LIST
         LA    R1,S99RBPTR        ADDR OF PARM LIST FOR DYNALLOC.
         DYNALLOC ,               UNALLOCATE DATASET
         LTR   R15,R15            CHECK RETURN CODE, ASSUME OK
         MVC   TZONE(4),CVTTZ     MOVE TIME ZONE OFFSET INTO OUR LIST
         LA    R1,ARGS            -> TO ARGS FOR TODCN
         L     R15,=V(TODCN)      ADDRESS OF TIMESTAMP CONVERTER
         BALR  R14,R15            AND GO THERE
         MVC   TRET(2),=C'00'
         PACK  DOUBLE+4(4),TRET(7)
         LA    R1,PTRS
         L     R15,=V(JULSUB)
         BALR  R14,R15
         LA    R15,MSGDATA
         MVC   MSGDATA(9),DAYDATE+20 DAY OF WEEK
         LA    R15,MSGDATA+9
BACK1    CLI   0(R15),C' '
         BNE   *+8
         BCT   R15,BACK1
         LA    R15,2(,R15)
         MVC   0(20,R15),DAYDATE   MONTH DAY YEAR
         LA    R15,20(,R15)
BACK2    CLI   0(R15),C' '
         BNE   *+8
         BCT   R15,BACK2
         LA    R15,2(,R15)
         MVI   0(R15),C'('
         MVC   1(2,R15),TRET+2     YY
         MVI   3(R15),C'.'
         MVC   4(3,R15),TRET+4     DDD
         MVI   7(R15),C')'
         LA    R15,9(,R15)
         MVC   0(2,R15),=C'AT'
         LA    R15,3(,R15)         POINT TO WHERE HH.MM WILL GO
         MVC   0(8,R15),TRET+7     MOVE TIME IN
         MVI   2(R15),C':'         MOVE IN A COLON
         MVI   5(R15),C':'         MOVE IN A COLON
*        SETMODE 24
         APUT  MSG,LMSG            TELL CALLER
*        SETMODE 31
RETURN   EQU   *
         MOREND
SETPTR   DS    0H
         LA    R9,SHWASS           -> ASSOC PTRS
         CLI   SHWTYPE,C'D'        DATA TYPE?
         BER   R14                 YES, RETURN
         CLI   SHWTYPE,C'I'        INDEX TYPE?
         BER   R14                 RETURN
         LA    R9,SHWASS0          -> TO ASSOC PTRS
         BR    R14                 RETURN
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         MVC   1(1,R15),0(R1)        Move byte
         UNPK  0(3,R15),1(2,R15)     Unpack
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)           Increment output pointer
         LA    R1,1(,R1)             Increment input pointer
         BCT   R0,HEX                Decrement length, then loop
         MVI   0(R15),C' '           Blank the trailing byte
         BR    R4                    Return to caller
HEXTAB   DC    C'0123456789ABCDEF'   Translate table
         SPACE
* --------------------------------------------------------- *
         EJECT
SAVE1401 DS    5F                  ONE EXTRA
HEXSAVE  DS    3F
SAV4HEX  DC    F'0'
         DC    C' '
BIGLINE  DC    CL50' '
MSG      DC    C'LAST CLPA WAS ON '
MSGDATA  DC    CL60' '
LMSG     EQU   *-MSG
ARGS     DC    A(TZONE)
         DC    A(TSTAMP)
         DC    X'80',AL3(TRET)
TZONE    DC    F'0'
TSTAMP   DC    XL8'FFFFFFFFFFFFFFFF'
TRET     DC    CL24' '             RETURNED IS YYYYDDDHH.MM.SS.MMMMMM
DTYP     EQU   *
         DC    X'3010200F',C'3390'
         DC    X'3010200E',C'3380'
         DC    X'3010200C',C'3375'
         DC    X'3010200B',C'3350'
         DC    X'30102009',C'3330'
         DC    X'3010200D',C'3330'   3330-1
PLPA     DCB   DDNAME=PLPA,DSORG=PS,RECFM=U,BLKSIZE=80,MACRF=GL
S99RBPTR DC    X'80',AL3(S99RB)       SVC 99 REQUEST BLOCK PTR
S99RB    DS    0F
S99RBLN  DC    AL1(20)                LENGTH=20 BYTES
S99VERB  DC    X'01'                  VERB CODE=01 (DSNAME ALLOC)
S99FLAG1 DC    X'1000'                DONT USE EXISTING ALLOC
S99ERROR DC    AL2(0)                 ERROR CODE
S99INFO  DC    AL2(0)                 INFO  CODE
S99TXTPP DC    A(S99TUPLA)            POINTER TO TEXT UNIT POINTERS
S99RSVD1 DC    A(0)                   RESERVED
S99FLAG2 DC    A(0)                   FLAGS 2
S99TUPLA DC    A(S99TUKY1)            TEXT UNIT POINTERS
         DC    A(S99TUKY2)
         DC    A(S99TUKY3)
         DC    A(S99TUKY4)
         DC    X'80',AL3(S99TUKY5)    LAST PARM
S99TUPLF DC    X'80',AL3(S99TUKY1)    LAST PARM
S99TUNIT DS    0F
S99TUKY1 DC    X'0001',X'0001',X'0004',C'PLPA'           DDN=PLPA
S99TUKY2 DC    X'0002',X'0001',X'002C',CL44'*    '       DSNAME
S99TUKY3 DC    X'0004',X'0001',X'0001',X'08'             SHR
S99TUKY4 DC    X'0010',X'0001',X'0006',CL6'VOLSER'       VOLSER
S99TUKY5 DC    X'0015',X'0001',X'0004',CL4'3390'         DEVTYP
         DS    0D
S99LENG  EQU   *-S99RBPTR                 LENGTH
* WORK AREAS FOR JULSUB ROUTINE FOR DAY DATE CONVERSION
DOUBLE   DS    D
INPARM   DC    F'3'
DAYDATE  DC    CL48' '
OUTPARM  DC    AL4(16+128)
WORK     DS    32D
PTRS     DC    AL4(DOUBLE+4)
         DC    AL4(INPARM)
         DC    AL4(DAYDATE)
         DC    AL4(OUTPARM)
         DC    X'80',AL3(WORK)
* WORK AREAS ETC FOR DSN LOOKUP
MVCDSN1  MVC   PAGEDSN(*-*),0(R1)       EXECUTED MOVE
PAGEDSN  DC    CL44' '
ACBA     DC    F'0'
CI       DC    CL3' '
FLDNM1   DC    CL8' '
FLDNM2   DC    CL8' '
FLDNM3   DC    CL8' '
AREA     DC    H'512'               WORK AREA FOR
         DC    510C' '              SHOWCAT AND SUBSEQUENTLY
         DC    2C' '                USED BY OTHER PARTS OF PGM
         SPACE
         DS    0F
CATPL    DC    (LCTGPL)X'00'
CTGFL2   DC    F'0'
CTGFL3   DC    F'0'
FLD1     DC    (LCTGFL)X'00'
FLD2     DC    (LCTGFL)X'00'
FLD3     DC    (LCTGFL)X'00'
         EJECT
         IEZCTGPL
         SPACE 5
         IEZCTGFL
         SPACE 5
         IGGSHWPL
         SPACE 5
         CVT   DSECT=YES
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
